/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package org.utl.dsm.mongoView;

import com.mongodb.BasicDBObject;
import com.mongodb.BasicDBObjectBuilder;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import static org.utl.dsm.mongoView.Actualizar.crearConexion;
import static org.utl.dsm.mongoView.Insertar.crearConexion;

/**
 *
 * @author pc
 */
public class Eliminar extends javax.swing.JPanel {

    DB db;
    BasicDBObject backup;
    DBCollection collect;

    /**
     * Creates new form Eliminar
     */
    public Eliminar() {
        initComponents();
        actualizarTabla();
        jTableEliminarDocumentos.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    int selectedRow = jTableEliminarDocumentos.getSelectedRow();
                    if (selectedRow != -1) {
                        nombreEliminar.setText(jTableEliminarDocumentos.getValueAt(selectedRow, 0).toString());
                        apellidoPEliminar.setText(jTableEliminarDocumentos.getValueAt(selectedRow, 1).toString());
                        edadEliminar.setText(jTableEliminarDocumentos.getValueAt(selectedRow, 2).toString());
                        nacionalidadEliimnar.setText(jTableEliminarDocumentos.getValueAt(selectedRow, 3).toString());

                        docbackup();
                    }
                }
            }
        });
    }

    public static MongoClient crearConexion() {
        MongoClient mongo = null;
        mongo = new MongoClient("localhost", 27017);

        return mongo;
    }

    private void actualizarTabla() {
        // Obtén la conexión y la colección
        MongoClient mongo = crearConexion();
        DB db = mongo.getDB("pruebaMongo");
        collect = db.getCollection("usuarios");

        // Realiza la consulta a la base de datos
        DBCursor cursor = collect.find();

        // Obtén el modelo de la tabla
        DefaultTableModel model = (DefaultTableModel) jTableEliminarDocumentos.getModel();

        // Limpia el modelo actual
        model.setRowCount(0);

        // Itera sobre los resultados y añade las filas a la tabla
        while (cursor.hasNext()) {
            DBObject row = cursor.next();
            String nombre = (String) row.get("nombre");
            String apellidoP = (String) row.get("apellidoP");
            Object edadObject = row.get("edad");
            String edad = (edadObject != null) ? edadObject.toString() : "";
            String nacionalidad = (String) row.get("nacionalidad");

            // Agrega la fila al modelo
            model.addRow(new Object[]{nombre, apellidoP, edad, nacionalidad});
        }

        // Cierra el cursor
        cursor.close();

        viewMongoCRUD metodo = new viewMongoCRUD();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreEliminar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEliminarDocumentos = new javax.swing.JTable();
        edadEliminar = new javax.swing.JTextField();
        nacionalidadEliimnar = new javax.swing.JTextField();
        apellidoPEliminar = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(453, 364));

        nombreEliminar.setEditable(false);

        jTableEliminarDocumentos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nombre", "Apellido Paterno ", "Edad", "Nacionalidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableEliminarDocumentos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableEliminarDocumentosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableEliminarDocumentos);
        if (jTableEliminarDocumentos.getColumnModel().getColumnCount() > 0) {
            jTableEliminarDocumentos.getColumnModel().getColumn(2).setResizable(false);
        }

        edadEliminar.setEditable(false);

        nacionalidadEliimnar.setEditable(false);

        apellidoPEliminar.setEditable(false);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellido Paterno");

        jLabel3.setText("Edad");

        jLabel4.setText("Nacionalidad");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apellidoPEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(edadEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nacionalidadEliimnar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombreEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(edadEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidoPEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nacionalidadEliimnar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        deleteDocument();
        actualizarTabla();
        cleanInputs();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void jTableEliminarDocumentosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableEliminarDocumentosMouseClicked
        int fila = jTableEliminarDocumentos.rowAtPoint(evt.getPoint());
        nombreEliminar.setText(jTableEliminarDocumentos.getValueAt(fila, 0).toString());
        apellidoPEliminar.setText(jTableEliminarDocumentos.getValueAt(fila, 1).toString());
        edadEliminar.setText(jTableEliminarDocumentos.getValueAt(fila, 2).toString());
        nacionalidadEliimnar.setText(jTableEliminarDocumentos.getValueAt(fila, 3).toString());
        docbackup();
    }//GEN-LAST:event_jTableEliminarDocumentosMouseClicked
    //Metodo para eliminar un documento

    public void deleteDocument() {
        MongoClient mongo = crearConexion();
        DB db = mongo.getDB("pruebaMongo");
        collect = db.getCollection("usuarios");
        collect.findAndRemove(backup);
    }

    public void docbackup() {
        BasicDBObjectBuilder backup = BasicDBObjectBuilder.start();
        backup.add("nombre", nombreEliminar.getText());
        backup.add("apellidoP", apellidoPEliminar.getText());
        backup.add("edad", edadEliminar.getText());
        backup.add("nacionalidad", nacionalidadEliimnar.getText());
        backup = (BasicDBObjectBuilder) backup.get();

    }

    public void cleanInputs() {
        nombreEliminar.setText("");
        apellidoPEliminar.setText("");
        edadEliminar.setText("");
        nacionalidadEliimnar.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apellidoPEliminar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JTextField edadEliminar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEliminarDocumentos;
    private javax.swing.JTextField nacionalidadEliimnar;
    private javax.swing.JTextField nombreEliminar;
    // End of variables declaration//GEN-END:variables
}
